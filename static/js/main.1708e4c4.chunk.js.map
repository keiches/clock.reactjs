{"version":3,"sources":["logo.svg","components/digit.js","components/clock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","mozCancelRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","clearTimeout","requestInterval","timeout","setInterval","start","performance","now","handle","value","loop","current","call","clearRequestInterval","Digit","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","angle","reset","style","transform","ticksToReset","ticks","handleTicked","bind","assertThisInitialized","processTick","autoTicks","setState","taskStartTime","className","onOverflowed","concat","onTicked","taskFinishTime","longFormatted","padStart","react_default","a","createElement","Component","defaultProps","ClockContext","React","createContext","Clock","hours","minutes","seconds","handleHoursTicked","handleHoursOverflowed","handleMinutesTicked","handleMinutesOverflowed","handleSecondsTicked","handleSecondsOverflowed","resetTicksForHour","ticksPerHour","resetTicksForMinute","ticksPerMinute","Provider","digit","resetTicksForSecond","ticksPerSecond","propsTypes","PropTypes","bool","number","App","datetime","Date","clock","getHours","getMinutes","getSeconds","Boolean","location","hostname","match","onready","event","console","log","document","readyState","ReactDOM","render","src_App_0","getElementById","documentElement","doScroll","addEventListener","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1708e4c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nwindow.requestAnimationFrame =\n  window.requestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  (window.mozRequestAnimationFrame && window.mozCancelRequestAnimationFrame) ||\n  window.oRequestAnimationFrame ||\n  !window.msRequestAnimationFrame ||\n  (callback => window.setTimeout(callback, 1000 / 60)); // shoot for 60 fps\n\nwindow.cancelAnimationFrame =\n  window.cancelAnimationFrame ||\n  window.webkitCancelAnimationFrame ||\n  window.webkitCancelRequestAnimationFrame ||\n  window.mozCancelRequestAnimationFrame ||\n  window.oCancelRequestAnimationFrame ||\n  window.msCancelRequestAnimationFrame ||\n  window.clearTimeout;\n\nwindow.requestInterval = function requestInterval(callback, timeout) {\n  if (!window.requestAnimationFrame) return window.setInterval(callback, timeout);\n\n  let start = window.performance.now(); // new Date().getTime();\n  const handle = {};\n\n  function loop() {\n    const current = window.performance.now(); // new Date().getTime();\n    const delta = current - start;\n\n    if (delta >= timeout) {\n      callback.call();\n      start = current; // window.performance.now(); // new Date().getTime();\n    }\n\n    handle.value = window.requestAnimationFrame(loop);\n  }\n\n  handle.value = window.requestAnimationFrame(loop);\n  return handle;\n};\n\nwindow.clearRequestInterval = function clearRequestInterval(handle) {\n  window.cancelAnimationFrame(handle.value);\n};\n\nclass Digit extends Component {\n  state = {\n    value: this.props.value,\n    angle: 360 / this.props.reset,\n    style: {\n      transform: 'rotate(0deg)'\n    },\n    ticksToReset: this.props.ticks * 1000\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleTicked = this.handleTicked.bind(this);\n    this.processTick = this.processTick.bind(this);\n  }\n\n  componentDidMount() {\n    const props = this.props;\n    if (props.autoTicks) {\n      this.setState({\n        taskStartTime: window.performance.now(),\n        className: 'rotate' // 'rotating',\n        /* style: {\n          animationDuration: `${props.reset}s`\n        }*/\n      });\n      window.requestInterval(this.processTick, props.ticks);\n    } else {\n      this.setState({\n        className: 'rotate'\n      });\n    }\n    //\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.reset !== this.props.reset) {\n      this.setState({\n        angle: 360 / props.reset\n      });\n    }\n    if (props.value !== this.props.value) {\n      if (props.value === 0) {\n        this.setState({\n          value: 0,\n          style: {\n            transform: 'rotate(0deg)'\n          }\n        });\n        this.props.onOverflowed();\n      } else {\n        this.setState({\n          value: props.value,\n          style: {\n            transform: `rotate(${(this.state.angle * props.value) % 360}deg)`\n          }\n        });\n        this.props.onTicked();\n      }\n    }\n  }\n\n  handleTicked() {\n    // console.log('yyyy', this.props.className, this.state);\n    const state = this.state;\n    const props = this.props;\n    const value = state.value + props.ticks;\n    if (props.reset > value) {\n      this.setState({\n        value,\n        style: {\n          transform: `rotate(${(state.angle * value) % 360}deg)`\n        }\n      });\n      this.props.onTicked();\n    } else {\n      this.setState({\n        value: 0,\n        style: {\n          transform: 'rotate(0deg)'\n        }\n      });\n      this.props.onOverflowed();\n    }\n  }\n\n  processTick() {\n    // Go again if there’s enough time to do the next task.\n    const taskFinishTime = window.performance.now();\n    if (taskFinishTime - this.state.taskStartTime >= this.state.ticksToReset) {\n      this.setState({\n        taskStartTime: taskFinishTime\n      });\n      this.handleTicked();\n    }\n\n    // window.requestAnimationFrame(this.processTick);\n  }\n\n  render() {\n    const state = this.state;\n    const props = this.props;\n    const value = props.longFormatted ? `${state.value}`.padStart(2, '0') : state.value;\n    return (\n      // <div className=\"digit\" style={{ transform: `rotate(${degree}deg)` }}>\n      /* <div\n        className=\"digit\"\n        style={{\n          animation: `${props.className}-rotating 1s linear infinite`,\n          animationFillMode: 'forwards'\n        }}\n      >*/\n      <div className={`digit ${state.className}`} style={state.style}>\n        <div className=\"border-outer\">\n          <div className=\"border-inner\" />\n        </div>\n        {value}\n      </div>\n    );\n  }\n}\n\nDigit.propTypes = {\n  autoTicks: PropTypes.bool,\n  longFormatted: PropTypes.bool,\n  value: PropTypes.number,\n  reset: PropTypes.number,\n  ticks: PropTypes.number,\n  onOverflowed: PropTypes.func,\n  onTicked: PropTypes.func\n};\nDigit.defaultProps = {\n  autoTicks: false,\n  longFormatted: true,\n  value: 0,\n  reset: 60,\n  ticks: 1,\n  onOverflowed: null,\n  onTicked: null\n};\n\nexport default Digit;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Digit from './digit';\n\nconst ClockContext = React.createContext('clock');\n\nfunction withContext(Widget) {\n  return function ContextComponent(props) {\n    return (\n      <ClockContext.Consumer>{times => <Widget {...props} times={times} />}</ClockContext.Consumer>\n    );\n  };\n}\n\nclass Clock extends Component {\n  state = {\n    hours: this.props.hours || 0,\n    minutes: this.props.minutes || 0,\n    seconds: this.props.seconds || 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleHoursTicked = this.handleHoursTicked.bind(this);\n    this.handleHoursOverflowed = this.handleHoursOverflowed.bind(this);\n    this.handleMinutesTicked = this.handleMinutesTicked.bind(this);\n    this.handleMinutesOverflowed = this.handleMinutesOverflowed.bind(this);\n    this.handleSecondsTicked = this.handleSecondsTicked.bind(this);\n    this.handleSecondsOverflowed = this.handleSecondsOverflowed.bind(this);\n  }\n\n  componentDidMount() {\n    //\n  }\n\n  handleHoursOverflowed() {\n    /* const state = this.state;\n    const props = this.props;\n    if (props.resetTicksForHour > state.hours) {\n      this.setState({\n        hours: state.hours + props.ticksPerHour\n      });\n    } else {\n      this.setState({\n        hours: 0\n      });\n    }*/\n  }\n\n  handleHoursTicked(hours) {\n    //\n  }\n\n  handleMinutesOverflowed() {\n    const state = this.state;\n    const props = this.props;\n    if (props.resetTicksForHour > state.hours) {\n      this.setState({\n        hours: state.hours + props.ticksPerHour\n      });\n    } else {\n      this.setState({\n        hours: 0\n      });\n    }\n  }\n\n  handleMinutesTicked(minutes) {\n    //\n  }\n\n  handleSecondsOverflowed() {\n    const state = this.state;\n    const props = this.props;\n    if (props.resetTicksForMinute > state.minutes) {\n      this.setState({\n        minutes: state.minutes + props.ticksPerMinute\n      });\n    } else {\n      this.setState({\n        minutes: 0\n      });\n    }\n  }\n\n  handleSecondsTicked(seconds) {\n    //\n  }\n\n  render() {\n    return (\n      <ClockContext.Provider value=\"times\">\n        <div className=\"clock\">\n          <Digit\n            className=\"hours\"\n            longFormatted={this.props.longFormatted}\n            value={this.state.hours}\n            reset={this.props.resetTicksForHour}\n            ticks={this.props.ticksPerHour}\n            onOverflowed={this.handleHoursOverflowed}\n            onTicked={this.handleHoursTicked}\n          />\n          <span className={'separator-hours-mins'}>:</span>\n          <Digit\n            className={'mins'}\n            longFormatted={this.props.longFormatted}\n            value={this.state.minutes}\n            reset={this.props.resetTicksForMinute}\n            ticks={this.props.ticksPerMinute}\n            onOverflowed={this.handleMinutesOverflowed}\n            onTicked={this.handleMinutesTicked}\n          />\n          <span className={'separator-mins-secs'}>:</span>\n          <Digit\n            className={'secs'}\n            autoTicks={true}\n            longFormatted={this.props.longFormatted}\n            value={this.state.seconds}\n            reset={this.props.resetTicksForSecond}\n            ticks={this.props.ticksPerSecond}\n            onOverflowed={this.handleSecondsOverflowed}\n            onTicked={this.handleSecondsTicked}\n          />\n        </div>\n      </ClockContext.Provider>\n    );\n  }\n}\n\nClock.propsTypes = {\n  longFormatted: PropTypes.bool,\n  hours: PropTypes.number,\n  resetTicksForHour: PropTypes.number,\n  ticksPerHour: PropTypes.number,\n  minutes: PropTypes.number,\n  resetTicksForMinute: PropTypes.number,\n  ticksPerMinute: PropTypes.number,\n  seconds: PropTypes.number,\n  resetTicksForSecond: PropTypes.number,\n  ticksPerSecond: PropTypes.number\n};\nClock.defaultProps = {\n  longFormatted: true,\n  hours: 0,\n  resetTicksForHour: 24,\n  ticksPerHour: 1,\n  minutes: 0,\n  resetTicksForMinute: 60,\n  ticksPerMinute: 1,\n  seconds: 0,\n  resetTicksForSecond: 60,\n  ticksPerSecond: 1\n};\n\nexport default Clock;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Clock from './components/clock';\n\nclass App extends Component {\n  state = {\n    datetime: new Date()\n  };\n  /* constructor(props) {\n    super(props);\n    this.handleLoad = this.handleLoad.bind(this);\n  }\n\n componentDidMount() {\n    window.addEventListener('load', this.handleLoad);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.handleLoad);\n  }\n\n  handleLoad() {\n    const elemApp = document.getElementsByClassName('App-logo')[0];\n    // const pfx = ['webkit', 'moz', 'MS', 'o', ''];\n    let hovered = false;\n\n    function onAnimationIteration(event) {\n      console.log('AnimationListener', event);\n      if (hovered) {\n        elemApp.classList.remove('animated');\n        /!* elemApp.style.webkitTransform = 'scale(2)';\n        elemApp.style.MozTransform = 'scale(2)';\n        elemApp.style.msTransform = 'scale(2)';\n        elemApp.style.OTransform = 'scale(2)';*!/\n        elemApp.style.transform = 'scale(2)';\n      }\n    }\n\n    function onTransitionEnd(event) {\n      console.log('TransitionListener', event);\n      if (!hovered) {\n        elemApp.classList.add('animated');\n      }\n    }\n\n    function PrefixedEvent(element, type, callback) {\n      /!* for (var p = 0; p < pfx.length; p++) {\n        if (!pfx[p]) type = type.toLowerCase();\n        element.addEventListener(pfx[p] + type, callback, false);\n      }*!/\n      element.addEventListener(type.toLowerCase(), callback, false);\n    }\n\n    PrefixedEvent(elemApp, 'AnimationIteration', onAnimationIteration);\n\n    elemApp.onmouseover = function onmouseover(event) {\n      console.log('onmouseover', event);\n      hovered = true;\n    };\n    elemApp.onmouseout = function onmouseout(event) {\n      console.log('onmouseout', event);\n      setTimeout(function iter() {\n        hovered = false;\n      }, 500);\n      PrefixedEvent(elemApp, 'TransitionEnd', onTransitionEnd);\n      /!* elemApp.style.webkitTransform = 'scale(1)';\n      elemApp.style.MozTransform = 'scale(1)';\n      elemApp.style.msTransform = 'scale(1)';\n      elemApp.style.OTransform = 'scale(1)';*!/\n      elemApp.style.transform = 'scale(1)';\n    };\n  }*/\n\n  render() {\n    const state = this.state;\n    return (\n      <div className=\"App\">\n        <Clock\n          hours={state.datetime.getHours()}\n          resetTicksForHour={24}\n          ticksPerHour={1}\n          minutes={state.datetime.getMinutes()}\n          resetTicksForMinute={60}\n          ticksPerMinute={1}\n          seconds={state.datetime.getSeconds()}\n          resetTicksForSecond={60}\n          ticksPerSecond={1}\n          longFormatted={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction onready(event) {\n  console.log('onready', event, document.readyState);\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\nif (\n  document.readyState === 'complete' ||\n  (document.readyState !== 'loading' && !document.documentElement.doScroll)\n) {\n  onready();\n} else {\n  document.addEventListener('DOMContentLoaded', onready);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}